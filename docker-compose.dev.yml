version: '3'

services:
  nginx:
    container_name: infisical-dev-nginx
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - infisical-dev

  backend:
    container_name: infisical-dev-backend
    restart: unless-stopped
    depends_on:
      - mongo
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: infisical/backend
    volumes:
      - ./backend/src:/app/src
      - ./backend/nodemon.json:/app/nodemon.json
      - /app/node_modules
    command: npm run dev
    env_file: .env
    networks:
      - infisical-dev
  
  frontend:
    container_name: infisical-dev-frontend
    restart: unless-stopped
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: infisical/frontend
    volumes:
      - ./frontend/pages:/app/pages
      - ./frontend/public:/app/public
      - ./frontend/styles:/app/styles
      - ./frontend/components:/app/components
    env_file: .env
    networks:
      - infisical-dev

  mongo:
    image: mongo
    container_name: infisical-dev-mongo
    restart: always
    env_file: .env
    volumes:
      - mongo-data:/data/db
    networks:
      - infisical-dev

  mongo-express:
    container_name: infisical-dev-mongo-express
    image: mongo-express
    restart: always
    env_file: .env
    ports:
      - 8081:8081
    networks:
      - infisical-dev

volumes:
  mongo-data:
    driver: local

networks:
  infisical-dev: